# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/generator_spec/all/generator_spec.rbi
#
# generator_spec-0.9.4
module GeneratorSpec
end
module GeneratorSpec::Matcher
  def have_structure(&block); end
end
class GeneratorSpec::Matcher::File
  def check_contents(file); end
  def contains(text); end
  def initialize(name, &block); end
  def matches?(root); end
end
class GeneratorSpec::Matcher::Migration < GeneratorSpec::Matcher::File
  def matches?(root); end
  def migration_file_name(root, name); end
end
class GeneratorSpec::Matcher::Directory
  def directory(name, &block); end
  def file(name, &block); end
  def initialize(root = nil, &block); end
  def location(name); end
  def matches?(root); end
  def migration(name, &block); end
  def no_file(name); end
  def tree; end
end
class GeneratorSpec::Matcher::Root < GeneratorSpec::Matcher::Directory
  def failure_message; end
  def matches?(root); end
end
module GeneratorSpec::TestCase
  def method_missing(method_sym, *arguments, &block); end
  def respond_to?(method_sym, include_private = nil); end
  extend ActiveSupport::Concern
  include FileUtils
  include GeneratorSpec::Matcher
end
module GeneratorSpec::TestCase::ClassMethods
  def arguments(array); end
  def destination(path); end
  def tests(klass); end
end
module GeneratorSpec::GeneratorExampleGroup
  extend ActiveSupport::Concern
  include GeneratorSpec::TestCase
end
